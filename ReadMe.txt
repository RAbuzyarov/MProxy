
    Общие сведения

    Для реализации функционала мобильных прокси используются два и более LTE-модема Huawei 3372h, подключаемых напрямую или
через USB-хаб к компьютеру (коим может быть и Raspberry PI) под управлением ОС Linux (желательно, но необязательно, Ubuntu).
На компьютере поднимаются три docker-контейнера: haproxy, 3proxy и ipchanger.
    Основную работу по проксированию HTTP-трафика (т.н. "прямое проксирование") выполняет 3proxy, который принимает трафик,
приходящий на компьтер из интернета через домашний роутер, и передает этот трафик обратно в интернет, но уже через LTE-модемы
с sim-картами. Поэтому социальные сети ВК и ОК "видят" этот трафик как трафик от мобильных абонентов, что для ВК и ОК затрудняет
распознавание ботов и, следовательно, блокирование их работы антиспам-алгоритмами.
    Все бы ничего, и одного 3proxy нам было бы достаточно, но внешний IP-адрес, с которым каждый LTE-модем ходит в интернет,
необходимо менять в среднем раз в 5 минут. Иначе антиспам-алгоритмы ВК и ОК успеют "найти нас по IP-адресу" и забанят
наших ботов. Это как артиллеристы, отстрелявшиеся по врагу, обязаны оперативно сменить место дислокации во избежании
прилета ответочки. Или как в фильме "Матрица" герои в матрице всегда должны были действовать, не мешкая, и еще быстрее сваливать,
пока их не поймали Агенты. Поэтому мы вынуждены применить еще два docker-контейнера haproxy и ipchanger.
    Haproxy выполняет функцию проксирования входящего от ботов трафика в сторону 3proxy (т.н. "обратное проксирование").
Т.е. входящий трафик сначала попадает на haproxy, который в свою очередь перебрасывает трафик на 3proxy, а последний уже
отправляет трафик на LTE-модемы. Haproxy мы применяем из-за того, что он предоставляет возможность гибко управлять собой
через API, чего не предоставляет 3proxy. Если бы 3proxу мог так же гибко управляться извне, как haproxy, то haproxy нам бы
не понадобился. Зачем нам это управление? А вот зачем.
    Для того, чтобы раз в 5 минут сменить внешний IP-адрес LTE-модему, необходимо примерно на 10-20 секунд вывести
его из работы. Если просто так выводить модем из работы, то на эти 10-20 секунд боты, которые работали через этот модем,
отвалятся, из-за чего будут пропущены какие-нибудь важные рассылки, и, возможно, восстанавливать работу ботов придется вручную.
Чтобы такого не происходило и боты не чувствовали перебоев, перед тем, как вывести один модем из работы для смены IP-адреса,
весь приходящий на этот модем трафик необходимо перенаправить на другие работающие модемы, а после возвращения модема в
работу вернуть трафик обратно. Haproxy позволяет делать такое перенаправление трафика по командам извне, а в нашем случае
от ipchanger.
    Iphanger, как было сказано выше, посылает команды на haproxy, чтобы тот перенаправлял трафик с одного модема на другие
и обратно. То есть iphanger нужен для того, чтобы по графику менять IP-адреса LTE-модемам и координировать работу всех
элементов системы во время этого процесса. Если коротко, то на ipchanger раз в минуту запускается python-скрипт, который
последовательно опрашивает все LTE-модемы на предмет, не пора ли им менять IP-адрес. Для каждого модема, которому настала
пора сменить IP-адрес, скрипт командует haproxy перевести трафик этого модема на другие модемы, перезапускает модем для
смены его IP-адреса, проверяет вернулся ли модем в рабочий режим, проверяет есть ли через этот модем связь с интернетом и
не совпадает ли его новый IP-адрес с IP-адресами других модемов. Если все проверки проходят, то ipchanger командует haproxy
вернуть трафик на данный модем.
    Вот, собственно, и все.


    Инструкция по установке

Поднятие контейнера 3proxy:

Перед выполнением нижеприведенной команды docker run надо настроить конфигурационный файл 3proxy.cfg, и положить его в папку /etc/dockerapp/3proxy

sudo docker run -dt --restart always --network host -v /etc/dockerapp/3proxy:/usr/local/3proxy/conf --name 3proxy victorrds/3proxy


Поднятие контейнера haproxy:

Перед выполнением команды в текущем каталоге должен лежать конфиг файл haproxy.cfg
sudo docker run -dt --restart always --name haproxy --network host -v $(pwd):/usr/local/etc/haproxy:ro haproxytech/haproxy-alpine:2.4
   
полная инструкция HAProxy https://www.haproxy.com/blog/how-to-run-haproxy-with-docker/


Поднятие контейнера Python, на котором будет крутиться скрипт смены IP-адресов changeIP.py (пока не используется):

docker run -dt --restart always --name ipchanger --network host python

Установка Python классов для работы с API Huawei

pip install huawei-lte-api

